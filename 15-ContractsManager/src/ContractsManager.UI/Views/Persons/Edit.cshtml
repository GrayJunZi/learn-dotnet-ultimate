@model PersonUpdateRequest
@{
    ViewBag.Title = "Edit Person";
}

<a asp-controller="Persons" asp-action="Index" class="link-hover">Back to Persons List</a>
<h2>Edit Person</h2>

<form asp-controller="Persons" asp-action="Edit" method="post" class="needs-validation" novalidate>
    <input hidden asp-for="PersonId"/>
    <div class="mb-3 row">
        <label asp-for="PersonName" class="col-sm-2 col-form-label">Person Name</label>
        <div class="col-sm-10 has-validation">
            <input asp-for="PersonName" type="text" class="form-control">
            <div asp-validation-for="PersonName" class="invalid-feedback"></div>
        </div>
    </div>
    <div class="mb-3 row">
        <label asp-for="Email" class="col-sm-2 col-form-label">Email</label>
        <div class="col-sm-10 has-validation">
            <input asp-for="Email" class="form-control">
            <span asp-validation-for="Email" class="invalid-feedback"></span>
        </div>
    </div>
    <div class="mb-3 row">
        <label asp-for="DateOfBirth" class="col-sm-2 col-form-label">Date of Birth</label>
        <div class="col-sm-10 has-validation">
            <input asp-for="DateOfBirth" class="form-control">
        </div>
    </div>
    <div class="mb-3 row">
        <label class="col-sm-2 col-form-label">Gender</label>
        <div class="col-sm-10">
            @foreach (var gender in Enum.GetNames(typeof(GenderOptions)))
            {
                <div class="form-check">
                    @if (gender == Model.Gender.ToString())
                    {
                        <input asp-for="Gender" class="form-check-input" type="radio" value="@gender" checked>
                    }
                    else
                    {
                        <input asp-for="Gender" class="form-check-input" type="radio" value="@gender"/>
                    }
                    <label class="form-check-label" for="@gender">
                        @gender
                    </label>
                </div>
            }
        </div>
    </div>
    <div class="mb-3 row">
        <label asp-for="CountryId" class="col-sm-2 col-form-label">Country</label>
        <div class="col-sm-10">
            <select asp-for="CountryId" asp-items="@ViewBag.Countries" class="form-select">
                <option selected>Please Select</option>
            </select>
            <span asp-validation-for="CountryId" class="invalid-feedback"></span>
        </div>
    </div>
    <div class="mb-3 row">
        <label asp-for="Address" class="col-sm-2 col-form-label">Address</label>
        <div class="col-sm-10">
            <textarea asp-for="Address" class="form-control" rows="3"></textarea>
        </div>
    </div>
    <div class="mb-3 row">
        <label class="col-sm-2 col-form-label"></label>
        <div class="col-sm-10">
            <div class="form-check">
                <input asp-for="ReceiveNewsletter" class="form-check-input" type="checkbox" checked value="true">
                <label asp-for="ReceiveNewsletter" class="form-check-label">
                    Receive Newsletters
                </label>
            </div>
        </div>
    </div>
    <div class="d-grid gap-2">
        <div asp-validation-summary="All"></div>
        @if (ViewBag.Errors != null)
        {
            <ul>
                @foreach (var error in ViewBag.Errors)
                {
                    <li>@error</li>
                }
            </ul>
        }
    </div>
    <div class="d-grid gap-2">
        <button class="btn btn-primary" type="submit">Save</button>
    </div>
</form>

@section scripts
{
    <script
        src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"
        asp-fallback-test="window.jQuery"
        asp-fallback-src="~/jquery.min.js"></script>
    <script
        src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.3/jquery.validate.min.js"
        asp-fallback-test="window.jQuery.validator"
        asp-fallback-src="jquery.validate.min.js"></script>
    <script
        src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validation-unobtrusive/3.2.12/jquery.validate.unobtrusive.min.js"
        asp-fallback-test="window.jQuery.validator.unobtrusive"
        asp-fallback-src="jquery.validate.unobtrusive.min.js"></script>

    <script type="text/javascript">
        // Example starter JavaScript for disabling form submissions if there are invalid fields
        (() => {
            'use strict'

            // Fetch all the forms we want to apply custom Bootstrap validation styles to
            const forms = document.querySelectorAll('.needs-validation')

            // Loop over them and prevent submission
            Array.from(forms).forEach(form => {
                form.addEventListener('submit', event => {
                    if (!form.checkValidity()) {
                        event.preventDefault()
                        event.stopPropagation()
                    }

                    form.classList.add('was-validated')
                }, false)
            })
        })()
    </script>
}